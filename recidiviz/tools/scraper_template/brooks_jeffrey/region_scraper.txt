# Recidiviz - a platform for tracking granular recidivism metrics in real time
# Copyright (C) $year Recidiviz, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
# =============================================================================

"""Scraper implementation for $region (Brooks Jeffrey vendor)."""

from recidiviz.common.constants.enum_overrides import EnumOverrides
from recidiviz.ingest.scrape.vendors.brooks_jeffrey.brooks_jeffrey_scraper \
    import BrooksJeffreyScraper

class ${class_name}Scraper(BrooksJeffreyScraper):
    """Scraper implementation for $region."""
    def __init__(self, mapping_filepath=None):
        super(${class_name}Scraper, self).__init__('$region')

    def get_enum_overrides(self) -> EnumOverrides:
        overrides_builder = super(${class_name},
                                  self).get_enum_overrides().to_builder()
        # Add mappings here by calling overrides_builder.add() or .ignore()
        return overrides_builder.build()